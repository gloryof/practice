apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: db-stateful-set
spec:
  replicas: 3
  serviceName: redis-service
  selector:
    matchLabels:
      layer: db-data-node
      type: master
  template:
    metadata:
      name: db-master-pod
      labels:
        layer: db-data-node
        type: master
    spec:
      containers:
        - name: db-container
          image: localhost:5000/glory_of/k8s-redis:latest
          imagePullPolicy: Never
          args: [ "/start.sh" ]
          ports:
            - containerPort: 6379
          env:
            - name: STATEFUL_SET_NAME
              value: db-stateful-set
            - name: SERVICE_NAME
              value: redis-service

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-sentinel-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      layer: db-data-node
      type: sentinel
  template:
    metadata:
      name: db-sentinel-pod
      labels:
        layer: db-data-node
        type: sentinel
    spec:
      initContainers:
        - name: db-start-checker
          image: localhost:5000/glory_of/k8s-redis-start-validator:latest
          imagePullPolicy: Never
          args: [ "/check.sh" ]
          env:
            - name: TARGET_PORT
              value: "6379"
            - name: TARGET_HOST
              value: db-stateful-set-0.redis-service.default.svc.cluster.local
      containers:
        - name: db-sentinel-container
          image: localhost:5000/glory_of/k8s-redis-sentinel:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 26379
          args: [ "/start.sh", "-f", "/tmp/sentinel.conf", "-t", "/data/conf/sentinel.conf" ]
          volumeMounts:
            - name: db-config-volume
              mountPath: /tmp
      volumes:
        - name: db-config-volume
          configMap:
            name: db-sentinel-config
            items:
              - key: sentinel.conf
                path: sentinel.conf
