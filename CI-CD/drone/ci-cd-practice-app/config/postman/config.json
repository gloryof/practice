{
	"info": {
		"_postman_id": "306bd2b2-5dee-4259-a57b-a26f1d60acfb",
		"name": "CI/CD Application",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Vulnerability",
			"item": [
				{
					"name": "Get random-seed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test response\", function () {",
									"  var number = pm.response.text();",
									"  pm.expect(number).to.match(/[0-9]*/)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-CSRF-TOKEN",
								"value": "{{csrfToken}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/vulnerability/random-seed",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vulnerability",
								"random-seed"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Get by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-CSRF-TOKEN",
								"value": "{{csrfToken}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "test-system-user-id"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Register user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-CSRF-TOKEN",
								"value": "{{csrfToken}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"givenName\": \"test-given-name1\",\n    \"familyName\": \"test-family-name1\",\n    \"password\": \"12345678901234567890\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-CSRF-TOKEN",
								"value": "{{csrfToken}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"givenName\": \"test-given-name2\",\n    \"familyName\": \"test-family-name2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "test-system-user-id"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-CSRF-TOKEN",
								"value": "{{csrfToken}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "test-system-user-id"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{authToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var baseUrl = pm.environment.get(\"baseUrl\");",
					"var csrfUrlRequest = {",
					"    url: baseUrl + \"/csrf/token\",",
					"    method: 'POST'",
					"};",
					"",
					"pm.sendRequest(csrfUrlRequest, function (err, response) {",
					"    var csrfResult = response.text();",
					"    pm.collectionVariables.set(\"csrfToken\", csrfResult);",
					"",
					"    var authRequest = {",
					"        \"userId\" : pm.variables.get(\"user-id\"),",
					"        \"password\": pm.variables.get(\"password\")",
					"    }",
					"    var authenticateUrlRequest = {",
					"        url: baseUrl + \"/authenticate\",",
					"        method: 'POST',",
					"        body: {",
					"            mode: \"raw\",",
					"            raw: JSON.stringify(authRequest),",
					"        },",
					"        header: {",
					"            \"X-CSRF-TOKEN\": csrfResult,",
					"            \"Content-Type\": \"application/json\"",
					"        }",
					"    };",
					"",
					"    pm.sendRequest(authenticateUrlRequest, function (err, response) {",
					"        var tokenResult = response.json();",
					"        pm.collectionVariables.set(\"authToken\", tokenResult.tokenValue);",
					"    });",
					"});",
					"",
					"",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "authToken",
			"value": "",
			"type": "default"
		},
		{
			"key": "csrfToken",
			"value": "",
			"type": "default"
		}
	]
}